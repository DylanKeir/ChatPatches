plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

project.ext.set('minecraft', '1.19')
project.ext.set('yarn_mappings', '+build.4')
project.ext.set('loader_vers', '0.14.8')
project.ext.set('api_vers', '0.57.0+')

project.ext.set('cloth_vers', '7.0.73')
project.ext.set('modmenu_vers', '4.0.4')

archivesBaseName = 'wmch'
version = project.ext.minecraft + '-1.5.0'
group = 'obro1961.wmch'


repositories {
  	mavenCentral()
	maven { url "https://maven.shedaniel.me/" } // cloth-config
	maven { url "https://maven.terraformersmc.com/releases/" } // modmenu
	maven { url "https://repo.spongepowered.org/maven" } // fernflower decompiler (for .mixin.out)
}

configurations {
	fernflower .extendsFrom implementation
}
sourceSets {
	fernflower {
		compileClasspath += main.output
		ext.languageVersion = 8
		ext.compatibility = '1.6'
        ext.modularityExcluded = true
	}
}

dependencies {
	// Required loaders
	minecraft "com.mojang:minecraft:${project.ext.minecraft}"
	mappings "net.fabricmc:yarn:${project.ext.minecraft}${project.ext.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.ext.loader_vers}"

	// fabric api
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.ext.api_vers}${project.ext.minecraft}"
		//include "net.fabricmc.fabric-api:fabric-api:${project.ext.api_vers}${project.ext.minecraft}"


	// config api
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.ext.cloth_vers}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
	modImplementation "com.terraformersmc:modmenu:${project.ext.modmenu_vers}"

	// FernFlower decompiler
    //fernflowerImplementation 'org.jetbrains.java.decompiler:fernflower:sponge-SNAPSHOT'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}